ja:
  label:
    many: ラベル
  layout:
    home: ホームページ
    about: About
    contact: 連絡先
    dashboard: ダッシュボード
    logout: ログアウト
    help: Help
    extraction:
      new: New extraction
    website:
      index: Websites List
    documentation: Documentation
    sign_in: ログイン
    sign_up: Sign up
    password_forgotten: Forgot your password ?
  home:
    welcome_message: This website will help you extract data from any webpage and use them with any of your project. If you look for an easy way to display the extracted data, let me refer you to the
    learn_more: Learn more
    ssql_project: SSQL project.
    kiss:  The KISS principle, that is our philosophy, we provide a simple user interface allowing you to extract data from any webpage easily. Our algorithm is only based on what you and we can see, not on a DOM tree, or on some tag names. The extraction we are operating sticks to what you experience, and the only thing we ask you is some clicks !
    output:
      head: What about the output ?
      content: "You have access to your extracted data in XML and JSON, 2 of the most used data representation language on the internet ! And if it is not enough for you, we still have a solution, SuperSQL ! An SQL based syntax language allowing you to produce easily websites, mobile websites, ... This language can be connected to our API without any further configuration ! Check it out"
    who:
      head: Who are we ?
      content: "The developers of this project are members of the Toyama Laboratory of Keio University in Japan. Any questions, feedback or requests are very welcome. You can write to us in English, Japanese or French and we will try to answer as soon as possible. The main developer of this project, Thomas, is really interested in every new web technologies, Ruby On Rails, AngularJS, BackboneJS, and so on..."
  about:
    extraction:
      head: How does the extraction work ?
      content: "The extraction is only based on view properties of the rendered HTML document. That is to say, the font, the position and other stuffs like that. Each of these properties have different weights in the process, and the color of the text can be considered more important than the position of the element for instance. We do not consider the tag names or the dom tree position."
    labelling:
      head: The labelling process
      content: "Because we do not know how you want to refer to a certain information and which information you want to extract, you have to go through a labelling process, e.g. use our interactive user interface to choose the information and give it a name."
    retrieval:
      head: How to retrieve the data ?
      content:
        a: It is further explained in our
        b: documentation page.
        c: "But basically, we provide a REST interface to access the extracted data, JSON, XML, CSV, and XLS are all the avalaible formats. Please note that this information is updated every hour !"
    ssql:
      head: The SSQL project
      content: Even if you can now use it with other project, this extraction engine was first created in order to increase the possibilities of data input formats of the SuperSQL project; so that we can connect not only to relational databses but also find data directly from the Internet.
    community:
      head: The community
      content: Be careful, when you label some information, other users, even if they do not know who labelled it, are able to use it to earn some time without going through the labelling process if what they wish to extract corresponds to what you have already extracted ! But it is not a one side only operation, you will of course be able to benefit from tmhis system to extract information even faster.
  contact:
    form:  Contact Form
    name: Your name
    email: Your email
    content: Content
    send: Send
    check:
      head: Check it out !
      content: The web extraction engine is not the only project that the Toyama Laboratory is working one ! If you are interested in more awesome projects, please check them out.
      address: Address
  sessions:
    new:
      email: メールアドレス
      password: パスワード
      remember_me: Remember me
      password_confirmation: Password confirmation
  password:
    new:
      password_forgotten: Password forgotten ?
      instructions: Send instructions
  websites:
    index:
      header: List of extracted websites
    new:
      header: Extract data from a website
      url: Website URL (complete), just copy and paste it
      url_ph: Enter the URL here...
      submit: Submit
      weights_notice: "If you want to modify the weights of the properties used :"
  documentation:
    a: 
      head: Extract data
      content:
        basics:
          head: Using the interface - Basics
          content: |
            Extracting data has never been that easy, you just have to click on the new extraction menu and enter the URL of the website you want to extract, once it's done, wait a little, the processing can take some times depending on the website you are considering.
            Once the user interface has displayed, you can move your mouse over the elements of the webpage and when your mouse will be above an element that can be extracted, all other elements of the same group will be highlighted.
            You can then click to select those elements. You then have different choices, either the set you selected is correct and you want to extract it as is, and you can click on the label button and give a name to your resource.
        operations:
          head: Using the interface - The operations
          content:
            +:
              head: The plus operation
              content: |
                On the interface, you may have noticed that there is a + and an x icon, these icons refer to different availables operations on the data you select.
                When the + one is selected, then you are able to manually add 2 different groups and extract it as if it was only one. 
                It allows you to correct in an easy way imcomplete extractions, to do so, just click on another group and it will also be selected. You can then label as if it was a single group.
            x:
              head: The cross operation
              content: |
                When the x operation is selected, then if a group is already selected and you click on another one, the most consistent common parents of those 2 groups will be extracted.
                You typically use this operation when the extraction was not loose enough and you need it to be less fine, just click on 2 elements that are supposed to be on the same group, and you will see the result of the operation highlighted.
            -:
              head: The minus operation
              content: |
               This operation is not available yet but it will allow you to add a filter to the extraction process in order to try to delete intruders elements of a group. 
        save:
          head: Save
          content: |
            When you have finished labelling what you want to extract, just click on the save button, and you will be redirected to the list of extracted websites page.
            If the one you just extracted does not display yet, it is normal, wait a minute, refresh the page and you should see it, same for the items of the website.
    b: 
      head: Retrieve those data
      content:
        head: The query system
        a: |
          We provide a REST API so that you can access easily and in several formats your data. I will first give you an example of a request and you will then be able to understand the pattern.
          One of the URL you can query is as
        b: |
          That means that you have to send a GET query to the URL http://toobrok.com/websites.json (if you want to get a response in JSON). Parameters are indicated by a colon, and optional parameters are in parenthesis.
          So if I write
        c: |
          Then you need to send a GET query to the URL http://toobrok.com/websites/4/labels/title/items.json for example to get the list of items of the label title of the website whose id is 4. 
          To know the id of a website, you can refer to the websites list page of this website.
          Below is a list of URL you can query and for each URL, a javascript/jQuery example of how you would query them :
        websites: List of the extracted websites
        website_labels: List of the extracted labels of the website whose id is specified
        website_label_items: List of the extracted items of the specified label of the specified website
        footer: There are only 3 operations available currently but there will soon be more and you will be able to edit a label name and other similar operations
    c: 
      head: Use SuperSQL to display those data
      content: TODO...
    d:
      head: The community, how to use someone else labels
      content: TODO...