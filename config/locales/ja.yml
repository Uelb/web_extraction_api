ja:
  label:
    many: ラベル
  layout:
    home: ホームページ
    about: Toobrokとは
    contact: 連絡先
    dashboard: ダッシュボード
    logout: ログアウト
    help: ヘルプ
    extraction:
      new: 新しい抽出
    website:
      index: 抽出したデータ
    documentation: ドキュメントページ
    sign_in: ログイン
    sign_up: 新規登録
    password_forgotten: パスワードを忘れたら？
  home:
    welcome_message: このサイトは、ウェブページからデータを抽出し、そのデータを利用したい人に向けたものです。もし、抽出したデータを簡単に表現したいなら、
    learn_more: 詳細はこちら
    ssql_project: SSQLを確認して下さい。
    kiss: KISSの原則 (The KISS principle) を守り、シンプルなインターフェースを提供します。このシステムのアルゴリズムは、DOMツリーや、タグを導入せず、理解できることをベースにしています。いつものようにクリックするだけで、簡単に操作できます！ 
    output:
      head: 取得できるもの
      content: 入力したウェブページから、よく利用されるXMLとJSONを生成します。もし、他の形式でほしいものがあるのなら、SuperSQLがあります！SQLの文法をベースにした言語で、簡単にウェブサイトや、モバイル版ウェブページを作成することができます。これは、私たちが実装したAPIを導入するだけで可能です！チェックしてみてください。
    who:
      head: 開発者
      content: これは、慶應義塾大学理工学部の遠山研究室のメンバーが開発しております。ご意見、ご質問等がありましたら、連絡をお願い致します。日本語、英語、フランス語であれば、可能な限り早く、お答えします。 開発責任者のThomasは、Ruby on Rails、AngularJS、BackboneJS等、最新の言語について様々な知識を持ち、それらが関連した質問にも対応可能です。
  about:
    extraction:
      head: 抽出方法
      content: ブラウザで表示されたHTMLページ (フォント、位置等) を基に抽出します。これらの幅が異なっていたり、テキストの色であったり、HTMLタグやDOMツリーに影響されないものを基に抽出します。  
    labelling:
      head: ラベリング
      content: どのように情報を参照し、どのような情報を抽出するか決定するために、ラベリングを行う必要があります。ラベリングを行うインターフェースをこのサイトで提供しています。
    retrieval:
      head: どのようにしてデータを抽出するか？
      content:
        a: ""
        b: ドキュメントページ
        c: "に詳細があります。また、抽出したデータ(JSON, XML, CSV, XLSフォーマット)にアクセスするためのRESTインターフェースを提供しています。データは毎時間自動で更新されます。"
    ssql:
      head: SSQL
      content: このデータ抽出エンジンは、SSQLプロジェクトの入力データのフォーマットの可能性を広げるために作りました。そのため、リレーショナルデータベースだけでなく、Webから直接データを得ることが出来ます。
    community:
      head: シェア
      content: 抽出した情報にラベリングをすると、ラベリングしたユーザ自身だけでなく、他のユーザもその情報を利用することが出来ます。
  contact:
    form:  連絡先
    name: 名前
    email: メールアドレス
    content: コメント
    send: 送信
    check:
      head: 遠山研究室では 
      content: Toobrokの他にも、遠山研究室には素晴らしい研究プロジェクトがあります！ぜひチェックしてみて下さい！！
    address: 住所
  sessions:
    new:
      email: メールアドレス
      password: パスワード
      remember_me: 自動でログイン
      password_confirmation: パスワード（確認）
  password:
    new:
      password_forgotten: パスワードを忘れたら？
      instructions: 送信
  websites:
    index:
      header: 抽出したウェブサイト
    new:
      header: ウェブから抽出する
      url: URL (完全な), コピー貼り付け
      url_ph: こちらにURLを入力して下さい...
      submit: 送信
      weights_notice: "If you want to modify the weights of the properties used :"
      weights:
        color: 色
        bg_color: 背景の色
        width: 幅
        height: 高さ
        z_index: 重ね合わせ
        text_decoration: テキストの装飾
        font_style: フォントスタイル
        left_alignment: 垂直整列
        top_alignment: 平面線形
  documentation:
    support: サポート
    a: 
      head: 抽出
      content:
        basics:
          head: Using the interface - Basics
          content: |
            Extracting data has never been that easy, you just have to click on the new extraction menu and enter the URL of the website you want to extract, once it's done, wait a little, the processing can take some times depending on the website you are considering.
            Once the user interface has displayed, you can move your mouse over the elements of the webpage and when your mouse will be above an element that can be extracted, all other elements of the same group will be highlighted.
            You can then click to select those elements. You then have different choices, either the set you selected is correct and you want to extract it as is, and you can click on the label button and give a name to your resource.
        operations:
          head: Using the interface - The operations
          content:
            +:
              head: The plus operation
              content: |
                On the interface, you may have noticed that there is a + and an x icon, these icons refer to different availables operations on the data you select.
                When the + one is selected, then you are able to manually add 2 different groups and extract it as if it was only one. 
                It allows you to correct in an easy way imcomplete extractions, to do so, just click on another group and it will also be selected. You can then label as if it was a single group.
            x:
              head: The cross operation
              content: |
                When the x operation is selected, then if a group is already selected and you click on another one, the most consistent common parents of those 2 groups will be extracted.
                You typically use this operation when the extraction was not loose enough and you need it to be less fine, just click on 2 elements that are supposed to be on the same group, and you will see the result of the operation highlighted.
            -:
              head: The minus operation
              content: |
               This operation is not available yet but it will allow you to add a filter to the extraction process in order to try to delete intruders elements of a group. 
        save:
          head: Save
          content: |
            When you have finished labelling what you want to extract, just click on the save button, and you will be redirected to the list of extracted websites page.
            If the one you just extracted does not display yet, it is normal, wait a minute, refresh the page and you should see it, same for the items of the website.
    b: 
      head: Retrieve those data
      content:
        head: The query system
        a: |
          We provide a REST API so that you can access easily and in several formats your data. I will first give you an example of a request and you will then be able to understand the pattern.
          One of the URL you can query is as
        b: |
          That means that you have to send a GET query to the URL http://toobrok.com/websites.json (if you want to get a response in JSON). Parameters are indicated by a colon, and optional parameters are in parenthesis.
          So if I write
        c: |
          Then you need to send a GET query to the URL http://toobrok.com/websites/4/labels/title/items.json for example to get the list of items of the label title of the website whose id is 4. 
          To know the id of a website, you can refer to the websites list page of this website.
          Below is a list of URL you can query and for each URL, a javascript/jQuery example of how you would query them :
        websites: List of the extracted websites
        website_labels: List of the extracted labels of the website whose id is specified
        website_label_items: List of the extracted items of the specified label of the specified website
        footer: There are only 3 operations available currently but there will soon be more and you will be able to edit a label name and other similar operations
    c: 
      head: Use SuperSQL to display those data
      content: TODO...
    d:
      head: シェア, どのようにして他のユーザの抽出したデータを使えるか？
      content: TODO...